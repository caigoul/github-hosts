#!/bin/bash

# 一个用于生成 github hosts 的脚本

where_am_i="$( cd "$( dirname "$0"  )" && pwd  )"
domains=$(cat $where_am_i/domains)
dnss=$(cat $where_am_i/dnss)
hosts_path=$where_am_i/hosts
ping_log_path=$where_am_i/ping.log

print_in_line() {
  printf "\e[2K%-s\r" "$1" >&2
}

print_line() {
  printf "\e[2K%-s\n" "$1" >&2
}

# 通过 host 命令查询 域名对应的 ip 地址
# 参数：$1 域名
find_ips() {
  for dns in $dnss; do
    {
      print_in_line "[*] host $1 $dns ..."
      local ips=$(host $1 $dns | grep 'has address' | grep -o -e '[0-9].*')
      for ip in $ips; do
        print_in_line "[*] get ip $1 ----- $ip"
      done
      echo "$ips"
    } &
  done
}

# ping 获得的 ip 地址
# 参数: $1 域名 $2 ip 地址
ping_test() {
  for ip in $2; do
    {
      print_in_line "ping $ip..."
      local ping_time=$(ping -c 3 -W 1 $ip | grep 'rtt' | cut -d '=' -f 2 | cut -d '/' -f 2)
      if [ -n "$ping_time" ]; then
        print_in_line "$ping_time ms ping $ip"
        echo "$ping_time ms $ip $1"
      else
        print_in_line "ping $ip ... timeout"
      fi
    } &
  done
}

test() {
  # 获取域名的所有 ip，使用 sort 命令 排序，然后用 uniq 去重
  local ip_arr=$(find_ips $1 | sort | uniq)

  # 对 ip 地址进行测试，并根据 ping 的时间进行排序
  local ping_arr=$(ping_test $1 "${ip_arr[@]}" | sort -n)

  # ping_arr 里的第一行就是最快的 ip
  local ping_fastest=$(echo "$ping_arr" | head -n 1)
  local time=$(echo "$ping_fastest" | cut -d ' ' -f 1)
  local ip=$(echo "$ping_fastest" | cut -d ' ' -f 3)
  local domain=$(echo "$ping_fastest" | cut -d ' ' -f 4)

  echo "$ping_arr" >> $ping_log_path

  # 将结果写进文件
  if [ -n "$ping_fastest" ]; then
    print_line "$ping_fastest"
    printf "%-20s%-40s # %s ms\n" "$ip" "$domain" $time >>$hosts_path
  else
    print_line "timeout ... $1"
    echo $1 >>/tmp/err_hosts
  fi
}

echo '## github start ##' >$hosts_path
echo '' >/tmp/err_hosts
echo '' >$ping_log_path

for i in $domains; do
  test $i &
done
wait

# 如果某个域名超时了，尝试再获取一遍
echo ''
err_list=$(cat /tmp/err_hosts)
if [ -n "$err_list" ]; then
  echo '这些域名所查找到的 ip 都无法 ping 通：'
  echo "$err_list"
  echo '尝试重新获取...'

  echo '' >/tmp/err_hosts
  for i in $err_list; do
    test $i &
  done
  wait
fi
echo "## github end ##" >>$hosts_path
echo "## 生成于 $(date) ##" >>$hosts_path

echo 'done'

less $hosts_path
